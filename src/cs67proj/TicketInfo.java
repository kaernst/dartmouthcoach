/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs67proj;

import java.awt.Color;
import java.awt.event.ActionEvent;
import javax.swing.BorderFactory;

/**
 *
 * @author kernst
 */
public class TicketInfo extends javax.swing.JFrame {

    private boolean isOneWay;
    private int departFrom;
    private int goingTo;
    private static final String[] DEPT_CITIES = {"HANOVER", "LEBANON", "NEW LONDON", 
        "BOSTON: SOUTH STATION", "BOSTON: LOGAN AIRPORT", "NEW YORK CITY"};
    private static final String[] FROM_HAN_LEB_NL = {"BOSTON: SOUTH STATION",
        "BOSTON: LOGAN AIRPORT", "NEW YORK CITY"};
    private static final String[] FROM_BOS_NY = {"HANOVER", "LEBANON", "NEW LONDON"};
    private Person p;
    private Reservation r;
    private boolean isCommuter;
    private boolean oneWaySet;
    /**
     * Creates new form TicketInfo
     */
    public TicketInfo(Person p) {
        initComponents();
        this.p = p;
        r = new Reservation();
        isOneWay = true;
        departFrom = 0;
        goingTo = 0;
        oneWaySet = false;
        isCommuter = false;
    }
    
    public TicketInfo(Person p, boolean isOneWay) {
        initComponents();
        this.p = p;
        r = new Reservation();
        this.isOneWay = isOneWay;
        r.setIsOneWay(isOneWay);
        this.oneWaySet = true;
        if (isOneWay)
            OneWay.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24));
        else
            RoundTrip.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24));
        departFrom = 0;
        goingTo = 0;
        this.isCommuter = false;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DirNotSet = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        SelectDir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        NYCNoCommute = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        MakeChanges = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        LeavingFrom = new javax.swing.JLabel();
        HanoverLeave = new javax.swing.JButton();
        SouthLeave = new javax.swing.JButton();
        LebanonLeave = new javax.swing.JButton();
        LoganLeave = new javax.swing.JButton();
        NYCLeave = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        NewLondonLeave = new javax.swing.JButton();
        OneWay = new javax.swing.JButton();
        RoundTrip = new javax.swing.JButton();
        CommuterPass = new javax.swing.JButton();

        DirNotSet.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        DirNotSet.setBounds(new java.awt.Rectangle(100, 200, 400, 180));

        jLabel2.setFont(new java.awt.Font("Avenir Next Condensed", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("You did not select a direction.");

        SelectDir.setFont(new java.awt.Font("Avenir Next Condensed", 1, 18)); // NOI18N
        SelectDir.setText("SELECT A DIRECTION");
        SelectDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectDirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Avenir Next Condensed", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Please select either ONE WAY or ROUND TRIP to continue.");

        javax.swing.GroupLayout DirNotSetLayout = new javax.swing.GroupLayout(DirNotSet.getContentPane());
        DirNotSet.getContentPane().setLayout(DirNotSetLayout);
        DirNotSetLayout.setHorizontalGroup(
            DirNotSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirNotSetLayout.createSequentialGroup()
                .addGroup(DirNotSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(DirNotSetLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DirNotSetLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(SelectDir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DirNotSetLayout.setVerticalGroup(
            DirNotSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DirNotSetLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SelectDir, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        NYCNoCommute.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        NYCNoCommute.setBounds(new java.awt.Rectangle(100, 200, 400, 180));

        jLabel4.setFont(new java.awt.Font("Avenir Next Condensed", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("You cannot buy a commuter pass for NYC.");

        MakeChanges.setFont(new java.awt.Font("Avenir Next Condensed", 1, 18)); // NOI18N
        MakeChanges.setText("MAKE CHANGES");
        MakeChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeChangesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Avenir Next Condensed", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Please select a different type of ticket or a new location.");

        javax.swing.GroupLayout NYCNoCommuteLayout = new javax.swing.GroupLayout(NYCNoCommute.getContentPane());
        NYCNoCommute.getContentPane().setLayout(NYCNoCommuteLayout);
        NYCNoCommuteLayout.setHorizontalGroup(
            NYCNoCommuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NYCNoCommuteLayout.createSequentialGroup()
                .addGroup(NYCNoCommuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(NYCNoCommuteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(NYCNoCommuteLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(MakeChanges)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        NYCNoCommuteLayout.setVerticalGroup(
            NYCNoCommuteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NYCNoCommuteLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MakeChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 700));

        LeavingFrom.setFont(new java.awt.Font("Avenir Next Condensed", 1, 36)); // NOI18N
        LeavingFrom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LeavingFrom.setText("LEAVING FROM:");

        HanoverLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        HanoverLeave.setText("HANOVER");
        HanoverLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HanoverLeaveActionPerformed(evt);
            }
        });

        SouthLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        SouthLeave.setText("BOSTON: SOUTH STATION");
        SouthLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SouthLeaveActionPerformed(evt);
            }
        });

        LebanonLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        LebanonLeave.setText("LEBANON");
        LebanonLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LebanonLeaveActionPerformed(evt);
            }
        });

        LoganLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        LoganLeave.setText("BOSTON: LOGAN AIRPORT");
        LoganLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoganLeaveActionPerformed(evt);
            }
        });

        NYCLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        NYCLeave.setText("NEW YORK CITY");
        NYCLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NYCLeaveActionPerformed(evt);
            }
        });

        Back.setFont(new java.awt.Font("Avenir Next Condensed", 0, 18)); // NOI18N
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        NewLondonLeave.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        NewLondonLeave.setText("NEW LONDON");
        NewLondonLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewLondonLeaveActionPerformed(evt);
            }
        });

        OneWay.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        OneWay.setText("ONE WAY");
        OneWay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OneWayActionPerformed(evt);
            }
        });

        RoundTrip.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        RoundTrip.setText("ROUND TRIP");
        RoundTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoundTripActionPerformed(evt);
            }
        });

        CommuterPass.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24)); // NOI18N
        CommuterPass.setText("10-RIDE COMMUTER PASS - BOSTON SERVICE");
        CommuterPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommuterPassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CommuterPass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OneWay, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(RoundTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LeavingFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(HanoverLeave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SouthLeave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LebanonLeave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoganLeave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NYCLeave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NewLondonLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OneWay, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RoundTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CommuterPass, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LeavingFrom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HanoverLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LebanonLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NewLondonLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SouthLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoganLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NYCLeave, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        dispose();
        PurchaseFullName fullNameScreen = new PurchaseFullName(p.getFirst(), 
                p.getMiddle(), p.getLast(), p.getBirthDate());
        fullNameScreen.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void HanoverLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HanoverLeaveActionPerformed
        departFrom = 0;
        String dept = DEPT_CITIES[departFrom];
        r.setIsCommuter(isCommuter);
        r.setIsOneWay(isOneWay);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter && r.getDept().equals("BOSTON: SOUTH STATION") ||
                r.getDept().equals("BOSTON: LOGAN AIRPORT")) {
            dispose();
            BosCommuterTicketInfo ticketform = new BosCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else if (isCommuter) {
            dispose();
            HanLebNLCommuterTicketInfo ticketform = new HanLebNLCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else {
            dispose();
            HanLebNLTicketInfo ticketform = new HanLebNLTicketInfo(r, p);
            ticketform.setVisible(true);
        }
    }//GEN-LAST:event_HanoverLeaveActionPerformed

    private void LebanonLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LebanonLeaveActionPerformed
        departFrom = 1;
        String dept = DEPT_CITIES[departFrom];
        r.setIsOneWay(isOneWay);
        r.setIsCommuter(isCommuter);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter && r.getDept().equals("BOSTON: SOUTH STATION") ||
                r.getDept().equals("BOSTON: LOGAN AIRPORT")) {
            dispose();
            BosCommuterTicketInfo ticketform = new BosCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else if (isCommuter) {
            dispose();
            HanLebNLCommuterTicketInfo ticketform = new HanLebNLCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else {
            dispose();
            HanLebNLTicketInfo ticketform = new HanLebNLTicketInfo(r, p);
            ticketform.setVisible(true);
        }
    }//GEN-LAST:event_LebanonLeaveActionPerformed

    private void SouthLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SouthLeaveActionPerformed
        departFrom = 3;
        String dept = DEPT_CITIES[departFrom];
        r.setIsOneWay(isOneWay);
        r.setIsCommuter(isCommuter);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter && r.getDept().equals("BOSTON: SOUTH STATION") ||
                r.getDept().equals("BOSTON: LOGAN AIRPORT")) {
            dispose();
            BosCommuterTicketInfo ticketform = new BosCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else if (isCommuter) {
            dispose();
            HanLebNLCommuterTicketInfo ticketform = new HanLebNLCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else {
            dispose();
            BosNYTicketInfo ticketform = new BosNYTicketInfo(r, p);
            ticketform.setVisible(true);        
        }
    }//GEN-LAST:event_SouthLeaveActionPerformed

    private void LoganLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoganLeaveActionPerformed
        departFrom = 4;
        String dept = DEPT_CITIES[departFrom];
        r.setIsOneWay(isOneWay);
        r.setIsCommuter(isCommuter);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter && r.getDept().equals("BOSTON: SOUTH STATION") ||
                r.getDept().equals("BOSTON: LOGAN AIRPORT")) {
            dispose();
            BosCommuterTicketInfo ticketform = new BosCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else if (isCommuter) {
            dispose();
            HanLebNLCommuterTicketInfo ticketform = new HanLebNLCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else {
            dispose();
            BosNYTicketInfo ticketform = new BosNYTicketInfo(r, p);
            ticketform.setVisible(true);        
        }
    }//GEN-LAST:event_LoganLeaveActionPerformed

    private void NYCLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NYCLeaveActionPerformed
        departFrom = 5;
        String dept = DEPT_CITIES[departFrom];
        r.setIsOneWay(isOneWay);
        r.setIsCommuter(isCommuter);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter) {
            NYCNoCommute.setVisible(true);
        }
        else {
            dispose();
            BosNYTicketInfo ticketform = new BosNYTicketInfo(r, p);
            ticketform.setVisible(true);        
        }
    }//GEN-LAST:event_NYCLeaveActionPerformed

    private void NewLondonLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewLondonLeaveActionPerformed
        departFrom = 2;
        String dept = DEPT_CITIES[departFrom];
        r.setIsOneWay(isOneWay);
        r.setIsCommuter(isCommuter);
        r.setDept(dept);
        if (!oneWaySet) {
            DirNotSet.setVisible(true);
        }
        else if (isCommuter && r.getDept().equals("BOSTON: SOUTH STATION") ||
                r.getDept().equals("BOSTON: LOGAN AIRPORT")) {
            dispose();
            BosCommuterTicketInfo ticketform = new BosCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else if (isCommuter) {
            dispose();
            HanLebNLCommuterTicketInfo ticketform = new HanLebNLCommuterTicketInfo(r, p);
            ticketform.setVisible(true);
        }
        else {
            dispose();
            HanLebNLTicketInfo ticketform = new HanLebNLTicketInfo(r, p);
            ticketform.setVisible(true);
        }
    }//GEN-LAST:event_NewLondonLeaveActionPerformed

    private void OneWayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OneWayActionPerformed
        isOneWay = true;
        isCommuter = false;
        oneWaySet = true;
        RoundTrip.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        OneWay.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24));
        CommuterPass.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        NYCLeave.setVisible(true);
    }//GEN-LAST:event_OneWayActionPerformed

    private void RoundTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoundTripActionPerformed
        isOneWay = false;
        isCommuter = false;
        oneWaySet = true;
        OneWay.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        RoundTrip.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24));
        CommuterPass.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        NYCLeave.setVisible(true);
    }//GEN-LAST:event_RoundTripActionPerformed

    private void SelectDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectDirActionPerformed
        DirNotSet.dispose();
    }//GEN-LAST:event_SelectDirActionPerformed

    private void CommuterPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommuterPassActionPerformed
        isOneWay = false;
        isCommuter = true;
        oneWaySet = true;
        OneWay.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        RoundTrip.setFont(new java.awt.Font("Avenir Next Condensed", 0, 24));
        CommuterPass.setFont(new java.awt.Font("Avenir Next Condensed", 1, 24));
        NYCLeave.setVisible(false);
    }//GEN-LAST:event_CommuterPassActionPerformed

    private void MakeChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeChangesActionPerformed
        NYCNoCommute.dispose();
    }//GEN-LAST:event_MakeChangesActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TicketInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TicketInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TicketInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TicketInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TicketInfo().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton CommuterPass;
    private javax.swing.JFrame DirNotSet;
    private javax.swing.JButton HanoverLeave;
    private javax.swing.JLabel LeavingFrom;
    private javax.swing.JButton LebanonLeave;
    private javax.swing.JButton LoganLeave;
    private javax.swing.JButton MakeChanges;
    private javax.swing.JButton NYCLeave;
    private javax.swing.JFrame NYCNoCommute;
    private javax.swing.JButton NewLondonLeave;
    private javax.swing.JButton OneWay;
    private javax.swing.JButton RoundTrip;
    private javax.swing.JButton SelectDir;
    private javax.swing.JButton SouthLeave;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
